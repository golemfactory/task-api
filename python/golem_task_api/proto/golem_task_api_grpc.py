# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: golem_task_api/proto/golem_task_api.proto
# plugin: grpclib.plugin.main
import abc

import grpclib.const
import grpclib.client

import golem_task_api.proto.golem_task_api_pb2


class RequestorAppBase(abc.ABC):

    @abc.abstractmethod
    async def CreateTask(self, stream):
        pass

    @abc.abstractmethod
    async def NextSubtask(self, stream):
        pass

    @abc.abstractmethod
    async def Verify(self, stream):
        pass

    @abc.abstractmethod
    async def DiscardSubtasks(self, stream):
        pass

    @abc.abstractmethod
    async def RunBenchmark(self, stream):
        pass

    @abc.abstractmethod
    async def HasPendingSubtasks(self, stream):
        pass

    @abc.abstractmethod
    async def AbortTask(self, stream):
        pass

    @abc.abstractmethod
    async def AbortSubtask(self, stream):
        pass

    @abc.abstractmethod
    async def Shutdown(self, stream):
        pass

    def __mapping__(self):
        return {
            '/golem_task_api.RequestorApp/CreateTask': grpclib.const.Handler(
                self.CreateTask,
                grpclib.const.Cardinality.UNARY_UNARY,
                golem_task_api.proto.golem_task_api_pb2.CreateTaskRequest,
                golem_task_api.proto.golem_task_api_pb2.CreateTaskReply,
            ),
            '/golem_task_api.RequestorApp/NextSubtask': grpclib.const.Handler(
                self.NextSubtask,
                grpclib.const.Cardinality.UNARY_UNARY,
                golem_task_api.proto.golem_task_api_pb2.NextSubtaskRequest,
                golem_task_api.proto.golem_task_api_pb2.NextSubtaskReply,
            ),
            '/golem_task_api.RequestorApp/Verify': grpclib.const.Handler(
                self.Verify,
                grpclib.const.Cardinality.UNARY_UNARY,
                golem_task_api.proto.golem_task_api_pb2.VerifyRequest,
                golem_task_api.proto.golem_task_api_pb2.VerifyReply,
            ),
            '/golem_task_api.RequestorApp/DiscardSubtasks': grpclib.const.Handler(
                self.DiscardSubtasks,
                grpclib.const.Cardinality.UNARY_UNARY,
                golem_task_api.proto.golem_task_api_pb2.DiscardSubtasksRequest,
                golem_task_api.proto.golem_task_api_pb2.DiscardSubtasksReply,
            ),
            '/golem_task_api.RequestorApp/RunBenchmark': grpclib.const.Handler(
                self.RunBenchmark,
                grpclib.const.Cardinality.UNARY_UNARY,
                golem_task_api.proto.golem_task_api_pb2.RunBenchmarkRequest,
                golem_task_api.proto.golem_task_api_pb2.RunBenchmarkReply,
            ),
            '/golem_task_api.RequestorApp/HasPendingSubtasks': grpclib.const.Handler(
                self.HasPendingSubtasks,
                grpclib.const.Cardinality.UNARY_UNARY,
                golem_task_api.proto.golem_task_api_pb2.HasPendingSubtasksRequest,
                golem_task_api.proto.golem_task_api_pb2.HasPendingSubtasksReply,
            ),
            '/golem_task_api.RequestorApp/AbortTask': grpclib.const.Handler(
                self.AbortTask,
                grpclib.const.Cardinality.UNARY_UNARY,
                golem_task_api.proto.golem_task_api_pb2.AbortTaskRequest,
                golem_task_api.proto.golem_task_api_pb2.AbortTaskReply,
            ),
            '/golem_task_api.RequestorApp/AbortSubtask': grpclib.const.Handler(
                self.AbortSubtask,
                grpclib.const.Cardinality.UNARY_UNARY,
                golem_task_api.proto.golem_task_api_pb2.AbortSubtaskRequest,
                golem_task_api.proto.golem_task_api_pb2.AbortSubtaskReply,
            ),
            '/golem_task_api.RequestorApp/Shutdown': grpclib.const.Handler(
                self.Shutdown,
                grpclib.const.Cardinality.UNARY_UNARY,
                golem_task_api.proto.golem_task_api_pb2.ShutdownRequest,
                golem_task_api.proto.golem_task_api_pb2.ShutdownReply,
            ),
        }


class RequestorAppStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateTask = grpclib.client.UnaryUnaryMethod(
            channel,
            '/golem_task_api.RequestorApp/CreateTask',
            golem_task_api.proto.golem_task_api_pb2.CreateTaskRequest,
            golem_task_api.proto.golem_task_api_pb2.CreateTaskReply,
        )
        self.NextSubtask = grpclib.client.UnaryUnaryMethod(
            channel,
            '/golem_task_api.RequestorApp/NextSubtask',
            golem_task_api.proto.golem_task_api_pb2.NextSubtaskRequest,
            golem_task_api.proto.golem_task_api_pb2.NextSubtaskReply,
        )
        self.Verify = grpclib.client.UnaryUnaryMethod(
            channel,
            '/golem_task_api.RequestorApp/Verify',
            golem_task_api.proto.golem_task_api_pb2.VerifyRequest,
            golem_task_api.proto.golem_task_api_pb2.VerifyReply,
        )
        self.DiscardSubtasks = grpclib.client.UnaryUnaryMethod(
            channel,
            '/golem_task_api.RequestorApp/DiscardSubtasks',
            golem_task_api.proto.golem_task_api_pb2.DiscardSubtasksRequest,
            golem_task_api.proto.golem_task_api_pb2.DiscardSubtasksReply,
        )
        self.RunBenchmark = grpclib.client.UnaryUnaryMethod(
            channel,
            '/golem_task_api.RequestorApp/RunBenchmark',
            golem_task_api.proto.golem_task_api_pb2.RunBenchmarkRequest,
            golem_task_api.proto.golem_task_api_pb2.RunBenchmarkReply,
        )
        self.HasPendingSubtasks = grpclib.client.UnaryUnaryMethod(
            channel,
            '/golem_task_api.RequestorApp/HasPendingSubtasks',
            golem_task_api.proto.golem_task_api_pb2.HasPendingSubtasksRequest,
            golem_task_api.proto.golem_task_api_pb2.HasPendingSubtasksReply,
        )
        self.AbortTask = grpclib.client.UnaryUnaryMethod(
            channel,
            '/golem_task_api.RequestorApp/AbortTask',
            golem_task_api.proto.golem_task_api_pb2.AbortTaskRequest,
            golem_task_api.proto.golem_task_api_pb2.AbortTaskReply,
        )
        self.AbortSubtask = grpclib.client.UnaryUnaryMethod(
            channel,
            '/golem_task_api.RequestorApp/AbortSubtask',
            golem_task_api.proto.golem_task_api_pb2.AbortSubtaskRequest,
            golem_task_api.proto.golem_task_api_pb2.AbortSubtaskReply,
        )
        self.Shutdown = grpclib.client.UnaryUnaryMethod(
            channel,
            '/golem_task_api.RequestorApp/Shutdown',
            golem_task_api.proto.golem_task_api_pb2.ShutdownRequest,
            golem_task_api.proto.golem_task_api_pb2.ShutdownReply,
        )


class ProviderAppBase(abc.ABC):

    @abc.abstractmethod
    async def Compute(self, stream):
        pass

    @abc.abstractmethod
    async def RunBenchmark(self, stream):
        pass

    @abc.abstractmethod
    async def Shutdown(self, stream):
        pass

    def __mapping__(self):
        return {
            '/golem_task_api.ProviderApp/Compute': grpclib.const.Handler(
                self.Compute,
                grpclib.const.Cardinality.UNARY_UNARY,
                golem_task_api.proto.golem_task_api_pb2.ComputeRequest,
                golem_task_api.proto.golem_task_api_pb2.ComputeReply,
            ),
            '/golem_task_api.ProviderApp/RunBenchmark': grpclib.const.Handler(
                self.RunBenchmark,
                grpclib.const.Cardinality.UNARY_UNARY,
                golem_task_api.proto.golem_task_api_pb2.RunBenchmarkRequest,
                golem_task_api.proto.golem_task_api_pb2.RunBenchmarkReply,
            ),
            '/golem_task_api.ProviderApp/Shutdown': grpclib.const.Handler(
                self.Shutdown,
                grpclib.const.Cardinality.UNARY_UNARY,
                golem_task_api.proto.golem_task_api_pb2.ShutdownRequest,
                golem_task_api.proto.golem_task_api_pb2.ShutdownReply,
            ),
        }


class ProviderAppStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Compute = grpclib.client.UnaryUnaryMethod(
            channel,
            '/golem_task_api.ProviderApp/Compute',
            golem_task_api.proto.golem_task_api_pb2.ComputeRequest,
            golem_task_api.proto.golem_task_api_pb2.ComputeReply,
        )
        self.RunBenchmark = grpclib.client.UnaryUnaryMethod(
            channel,
            '/golem_task_api.ProviderApp/RunBenchmark',
            golem_task_api.proto.golem_task_api_pb2.RunBenchmarkRequest,
            golem_task_api.proto.golem_task_api_pb2.RunBenchmarkReply,
        )
        self.Shutdown = grpclib.client.UnaryUnaryMethod(
            channel,
            '/golem_task_api.ProviderApp/Shutdown',
            golem_task_api.proto.golem_task_api_pb2.ShutdownRequest,
            golem_task_api.proto.golem_task_api_pb2.ShutdownReply,
        )
